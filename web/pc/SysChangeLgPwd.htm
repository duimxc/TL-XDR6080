<script type="text/javascript">
	function init()
	{
		var save = id("save");
		var saveAdmin = id("saveAdmin");
		var saveCommon = id("saveCommon");
		var oldPwd = id("oldPwd");
		var newPwd = id("newPwd");
		var newPwdAdmin = id("newPwdAdmin");
		var newPwdCommon = id("newPwdCommon");
		var newPwdC = id("newPwdC");

		var CMCC_ADMIN = "cmccadmin";

		var multiAccountShow = gUsernameSupport && gMultiAccountSupport && CMCC_ADMIN == $.getLgUsr();

		function errHandle(errNo, objId)
		{
			var showStr = "";

			switch (parseInt(errNo))
			{
			case ENONE:
				return false;
			case EINVLGUSRLEN:
				showStr = errStr.lgUsrLenInvalid;
				break;
			case EINLGUSRVALOLDSAME:
				showStr = errStr.usrNewOldSameErr;
				break;
			case EINLGUSRVALCHAR:
				showStr = errStr.usrCharValid;
				break;
			case EINVLGPWDLEN:
				if (PWD_MIN_LEN == 8)
				{
					showStr =errStr.lgPwdLenInvalid8;
				}
				else
				{
					showStr =errStr.lgPwdLenInvalid;
				}
				break;
			case EINLGVALCHAR:
				showStr = errStr.pwdInvalid;
				break;
			case ECHPWDDIF:
				showStr = errStr.pswNotMatch;
				break;
			case EINLGVALOLDSAME:
				showStr = errStr.pswNewOldSameErr;
				break;
			case EINVUSR:
			case EINVKEY:
				showStr = gUsernameSupport ? errStr.usrPwdError : errStr.pwdError;
				break;
			case ECMCCUSRERROR:
				showStr = errStr.cmccUsrPwdError;
				break;
			case EINVNEWUSR:
				showStr = errStr.cmccUsrError;
				break;
			default:
				showStr = errStr.invRequestFail;
				break;
			}

			showAlert(showStr, objId);
			return true;
		}

		function chkPswVal(szValue)
		{
			return (/^[\x21-\x7e]+$/.test(szValue));
		}

		function getPwdComplexity(str)
		{
			var result = 0;
			var hasNum = 0;
			var hasLetter = 0;
			var hasSymbol = 0;

			hasNum = /\d/g.test(str) ? 1 : 0;
			hasLetter = /[a-zA-Z]/g.test(str) ? 1 : 0;
			hasSymbol = /[\x21-\x2f\x3a-\x40\x5b-\x60\x7b-\x7e\s]/g.test(str) ? 1 : 0;

			result = hasNum + hasSymbol + hasLetter
			return result;
		}

		function pwdCheck(type)
		{
			var width = 24, tip = "", iClass = "warn";
			var lgPwdlessTip = "inline-block";
			var lgPwdValTip = "inline-block";
			var pwdValue = $("#newPwd" + type).val();
			var len = pwdValue.length;
			var lgPwdNoteVi = "visible";
			var result = true;
			var lgPwdNote = id("lgPwdNote" + type);
			var pwdDep = id("pwdDep" + type);
			var chgPwdDep = id("chgPwdDep" + type);
			var pwdDepI = id("pwdDepI" + type);
			var pwdComplexity = getPwdComplexity(pwdValue);

			$("#pwdStrengthNoteCon" + type).toggle(showPwdStrength);
			$("#pwdNoteCon" + type).toggle(!showPwdStrength);

			if (showPwdStrength)
			{
				if (6 <= len && len <= 32 && chkPswVal(pwdValue))
				{
					lgPwdNoteVi = "visible";
				}
				else
				{
					lgPwdNoteVi = "hidden";
				}

				if (pwdComplexity == 1)
				{
					if (len <= 10)
					{
						tip = label.weak;
						width = width;
					}
					else
					{
						tip = label.media;
						width = width*2;
					}
				}
				else if (pwdComplexity == 2)
				{
					if (len <= 10)
					{
						tip = label.media;
						width = width*2;
					}
					else
					{
						tip = label.strong;
						width = width*3;
						iClass = "correct";
					}
				}
				else if (pwdComplexity == 3)
				{
					tip = label.strong;
					width = width*3;
					iClass = "correct";
				}

				lgPwdNote.style.visibility = lgPwdNoteVi;
				pwdDep.innerHTML = tip;
				chgPwdDep.style.width = width + "px";
				pwdDepI.className = iClass;
			}
			else
			{
				if(!chkPswVal(pwdValue) && len != 0)
				{
					/* 密码中含有非法字符 */
					iClass = "error";
					tip = errStr.pwdCharInValid;
					result = false;
				}
				else if ((len >= 0 && len < PWD_MIN_LEN) || (len > PWD_MAX_LEN))
				{
					/* 密码长度非法 */
					iClass = "error";
					tip = errStr.lgPwdLenTooShort;
					result = false;
				}
				else if (pwdComplexity != 3)
				{
					iClass = "error";
					tip = errStr.pwdCharTypeNotEnough;
					result = false;
				}
				else
				{
					iClass = "correct";
					tip = "";
					result = true;
				}

				lgPwdNote.style.visibility = lgPwdNoteVi;
				pwdDepI.className = iClass;
				$("#pwdNoteLine" + type).text(tip);
			}

			return result;
		}

		if (USER_GROUP_REMOTE == $.authRltObj["group"])
		{
			disableBtn(save, true);
			if (multiAccountShow)
			{
				disableBtn(saveAdmin, true);
				disableBtn(saveCommon, true);
			}
		}
		else
		{
			function onSave(type){
				var oldPwdVal = id("oldPwd" + type).value;
				var newPwdVal = id("newPwd" + type).value;
				var newPwdCVal = id("newPwdC" + type).value;

				if (gUsernameSupport)
				{
					var	oldUsrVal = id("oldUsr" + type).value;

					if (type == "Admin")
					{
						var newUsrVal = CMCC_ADMIN;
					}
					else
					{
						var newUsrVal = id("newUsr" + type).value;
					}
				}

				/* 校验参数 */
				if (gUsernameSupport)
				{
					if (newUsrVal.length == 0 || newUsrVal.length > 32)
					{
						return errHandle(EINVLGUSRLEN, "newUsr" + type);
					}

					if (chkPswVal(newUsrVal) == false)
					{
						return errHandle(EINLGUSRVALCHAR, "newUsr" + type);
					}

					if (gMultiAccountSupport)
					{
						if ("Admin" != type && CMCC_ADMIN == newUsrVal)
						{
							return errHandle(EINVNEWUSR, "newUsr" + type);
						}
					}
				}

				if (newPwdVal.length == 0 || newPwdVal.length < PWD_MIN_LEN || newPwdVal.length > 32)
				{
					return errHandle(EINVLGPWDLEN, "newPwd" + type);
				}

				if (chkPswVal(newPwdVal) == false)
				{
					return errHandle(EINLGVALCHAR, "newPwd" + type);
				}

				if (newPwdVal != newPwdCVal)
				{
					return errHandle(ECHPWDDIF, "newPwd" + type);
				}

				if (false == pwdCheck(type))
				{
					return;
				}

				/* 显示Loading的id */
				setLoadingId("save" + type);
				hsLoading(true);
				gCloudAccountBR["pwdLen"] = newPwdVal.length;

				if (!gUsernameSupport && type == "")
				{
					$.changePwd(oldPwdVal, newPwdVal, function(code){
						var objId = "newPwd";

						if (code == EPWDERROR)
						{
							objId = "oldPwd";
						}

						errHandle(code, objId);
						hsLoading(false);
					});
				}
				else if ((gUsernameSupport && type == "") || type == "Admin")
				{
					$.changeUsrPwd(oldUsrVal, newUsrVal, oldPwdVal, newPwdVal, function(code){
						var objId = "newPwd" + type;

						if (code == EPWDERROR)
						{
							objId = "oldPwd" + type;
						}
						else if (code == EINVLGUSRLEN || code == EINVUSR)
						{
							objId = "oldUsr" + type;
						}
						else if (code == EINLGUSRVALOLDSAME
								|| code == EINLGUSRVALCHAR
								|| code == EINVUSR
								|| code == EINVKEY)
						{
							objId = "newUsr" + type;
						}
						else if (code == ECHPWDDIF)
						{
							objId = "newPwdC" + type;
						}

						errHandle(code, objId);
						hsLoading(false);
					});
				}
				else if (type == "Common")
				{
					$.checkUsrPwd(oldUsrVal, $.orgAuthPwd(oldPwdVal),function(errCode){
						if (errCode == ENONE){
							$.authRltObj["bHandLg"] = true;
							$.changeOthersUsrPwd("", newUsrVal, "", newPwdVal, function(code){
								var objId = "newPwd" + type;

								if (code == EPWDERROR)
								{
									objId = "oldPwd" + type;
								}
								else if (code == EINVLGUSRLEN || code == EINVUSR)
								{
									objId = "oldUsr" + type;
								}
								else if (code == EINLGUSRVALOLDSAME
										|| code == EINLGUSRVALCHAR
										|| code == EINVUSR
										|| code == EINVKEY)
								{
									objId = "newUsr" + type;
								}
								else if (code == ECHPWDDIF)
								{
									objId = "newPwdC" + type;
								}

								errHandle(code, objId);
								hsLoading(false);
							});
						}
						else
						{
							errHandle(ECMCCUSRERROR, "oldPwd" + type);
							// showLgError(parseInt($.authRltObj["code"]));
							hsLoading(false);
						}
					});
				}
			}

			newPwd.onkeyup = function(){
				pwdCheck("");
			};
			save.onclick = function(){
				onSave("");
			};
			if (multiAccountShow)
			{
				newPwdAdmin.onkeyup = function(){
					pwdCheck("Admin");
				};
				newPwdCommon.onkeyup = function(){
					pwdCheck("Common");
				};
				saveAdmin.onclick = function(){
					onSave("Admin");
				};
				saveCommon.onclick = function(){
					onSave("Common");
				};
			}
		}

		/* 判断显示单账号还是双账号，及用户名是否需要显示 */
		if (multiAccountShow)
		{
			$("#pwdLenNote").toggle(false);
			$("#pwdLenNoteAdmin").toggle(true);
			$("#pwdLenNoteCommon").toggle(true);
			$("#adminUserT1").removeClass("disNone");
			$("#adminUserC1").removeClass("disNone");
			$("#adminUserT2").removeClass("disNone");
			$("#adminUserC2").removeClass("disNone");
		}
		else
		{
			if (gUsernameSupport)
			{
				$("#pwdLenNote").toggle(true);
				$("#pwdLenNoteAdmin").toggle(false);
				$("#pwdLenNoteCommon").toggle(false);
				$("#normalUserT .title").text(menuStr.changeLgUsrPwd);
				$("#oldUsrRow").removeClass("disNone");
				$("#newUsrRow").removeClass("disNone");
			}
			else
			{
				$("#pwdLenNote").toggle(false);
				$("#pwdLenNoteAdmin").toggle(false);
				$("#pwdLenNoteCommon").toggle(false);
			}

			$("#normalUserT").removeClass("disNone");
			$("#normalUserC").removeClass("disNone");
		}
	}
	init();
</script>
<style type="text/css">
	p.pwdLenNote{
		margin:10px 0 25px 260px;
		color: #fff;
		font-size: 12px;
		text-align: left;
	}
</style>
<div id="hcCo" class="hcCo">
	<div class="hsHelp"></div>
	<div class="title disNone" id="normalUserT">
		<label class="title">{%menuStr.changeLgPwd%}</label>
	</div>
	<div class="block disNone" id="normalUserC">
		<ul class="gridLine gridLineA disNone" id="oldUsrRow">
			<label class="desLblA" for="oldUsr">{%label.chgOrUsr%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldUsr" class="textA text hoverBd" type="text" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="oldPwd">{%label.chgOrPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldPwd" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA disNone" id="newUsrRow">
			<label class="desLblA" for="newUsr">{%label.chgNewUsr%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newUsr" class="textA text hoverBd" type="text" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwd">{%label.chgNewPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwd" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
			<li id="lgPwdNote" class="note">
				<i class="warn" id="pwdDepI"></i>
				<div class="noteCon noteConRouteSet" id="pwdStrengthNoteCon">
					<p class="twoLine pwdDepC">{%label.chgPwdDep%}{%label.colon%}<label id="pwdDep">{%label.weak%}</label></p>
					<div class="pwdDepL"><label id="chgPwdDep"></label></div>
				</div>
				<div class="noteCon noteConRouteSet" id="pwdNoteCon">
					<p id="pwdNoteLine"></p>
				</div>
			</li>
		</ul>
		<p class="pwdLenNote" id="pwdLenNote">{%label.chgPwdChar8%}</p>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwdC">{%label.chgConNewPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwdC" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<div class="blockFuncA">
			<input id="save" type="button" value="{%btn.save%}" class="btnA subBtn" />
		</div>
	</div>
	<!-- 移动维护账号修改 -->
	<div class="title disNone" id="adminUserT1">
		<label class="title">{%menuStr.changeAdUsrPwd%}</label>
		<i class="helpBtn" helpStr="cmccAdminHelp"></i>
	</div>
	<div class="block disNone" id="adminUserC1">
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="oldUsrAdmin">{%label.chgOrUsr%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldUsrAdmin" class="textA text hoverBd" type="text" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="oldPwdAdmin">{%label.chgOrPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldPwdAdmin" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwdAdmin">{%label.chgNewPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwdAdmin" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
			<li id="lgPwdNoteAdmin" class="note">
				<i class="warn" id="pwdDepIAdmin"></i>
				<div class="noteCon noteConRouteSet" id="pwdStrengthNoteConAdmin">
					<p class="twoLine pwdDepC">{%label.chgPwdDep%}{%label.colon%}<label id="pwdDepAdmin">{%label.weak%}</label></p>
					<div class="pwdDepL"><label id="chgPwdDepAdmin"></label></div>
				</div>
				<div class="noteCon noteConRouteSet" id="pwdNoteConAdmin">
					<p id="pwdNoteLineAdmin"></p>
				</div>
			</li>
		</ul>
		<p class="pwdLenNote" id="pwdLenNoteAdmin">{%label.chgPwdChar8%}</p>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwdCAdmin">{%label.chgConNewPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwdCAdmin" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<div class="blockFuncA">
			<input id="saveAdmin" type="button" value="{%btn.save%}" class="btnA subBtn" />
		</div>
	</div>
	<!-- 普通账号修改 -->
	<div class="title disNone" id="adminUserT2">
		<label class="title">{%menuStr.changeNorUsrPwd%}</label>
	</div>
	<div class="block disNone" id="adminUserC2">
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="oldUsrCommon">{%label.chgAdminUsr%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldUsrCommon" class="textA text hoverBd" type="text" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="oldPwdCommon">{%label.chgAdminPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="oldPwdCommon" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newUsrCommon">{%label.chgNewCommonUsr%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newUsrCommon" class="textA text hoverBd" type="text" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwdCommon">{%label.chgNewCommonPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwdCommon" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
			<li id="lgPwdNoteCommon" class="note">
				<i class="warn" id="pwdDepICommon"></i>
				<div class="noteCon noteConRouteSet" id="pwdStrengthNoteConCommon">
					<p class="twoLine pwdDepC">{%label.chgPwdDep%}{%label.colon%}<label id="pwdDepCommon">{%label.weak%}</label></p>
					<div class="pwdDepL"><label id="chgPwdDepCommon"></label></div>
				</div>
				<div class="noteCon noteConRouteSet" id="pwdNoteConCommon">
					<p id="pwdNoteLineCommon"></p>
				</div>
			</li>
		</ul>
		<p class="pwdLenNote" id="pwdLenNoteCommon">{%label.chgPwdChar8%}</p>
		<ul class="gridLine gridLineA">
			<label class="desLblA" for="newPwdCCommon">{%label.chgConNewPwd%}{%label.colon%}</label>
			<li class="textConA textCon"><input id="newPwdCCommon" class="textA text hoverBd" type="password" maxLength="32" /><i class="tip"></i></li>
		</ul>
		<div class="blockFuncA">
			<input id="saveCommon" type="button" value="{%btn.save%}" class="btnA subBtn" />
		</div>
	</div>
</div>