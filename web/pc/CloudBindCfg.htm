<style type="text/css">
	body{
		background:#5e85c0 !important;
		fontSize:12px;
		height:100%;
	}
	p.inputTip a{
		color:#FFFFFF;
	}
	input.returnBtn{
		background:#335C9C;
		border-radius:3px;
		border:none;
		color:#FFFFFF;
		cursor:pointer;
		width:60px;
		height:25px;
		position:absolute;
		top:0px;
		right:15px;
	}
	label.proName{
		right:16px;
		font-size:12px;
		color:#FFFFFF;
		margin-top:18px;
		margin-left:20px;
		text-align:left;
		position:absolute;
	}
</style>
<script type="text/javascript">
	function gCloudAccountBindErrHandle(errNo, objOrId)
	{
		var showStr = "";
		var cloudErrRel;

		switch (errNo)
		{
		case ENONE:
			gCloudAccountBR["success"] = true;
			gCloudAccountBR["noteF"] = label.cloudAccountBindSuccess;
			return true;
		case EINDEVICEALREADYBOUND:
		case EINVACCOUNTBINDED:
			gCloudAccountBR["success"] = false;
            gCloudAccountBR["noteF"] = label.cloudAccountBindFailAndCallSupport;
            gCloudAccountBR["noteS"] = '';
			return true;
		case EINVDEVICEIDNOTEXIST:
		case EINVERRORDEVICEIDFORMATERROR:
			showStr = appendErrCode(label.cloudDeviceInfoExpt, errNo);
			break;
		case EINVACCOUNTNOTEXIST:
			showStr = appendErrCode(errStr.invCloudAccountNotExist, errNo);
			break;
		case EINVPASSWORDFMT:
		case EINVACCOUNTPWDFMT:
			showStr = appendErrCode(errStr.pwdInvalid, errNo);
			break;
		case EINVACCOUNTPWDERR:
			showStr = appendErrCode(errStr.invCloudAccoundPwdErr, errNo);
			break;
		case EINVACCOUNTPHONENUMFMT:
		case EINVMAILFMT:
		case EINVMAILLEN:
		case EINVACCOUNTEMAILFMT:
		case EINVCLOUDUSRCOUNTFORMAT:
			showStr = appendErrCode(errStr.invCloudAccountFmtErr, errNo);
			break;
		case EINVACCOUNTLOCKED:
			showStr = appendErrCode(errStr.invCloudAccountLocked, errNo);
			break;
		default:
			cloudErrRel = cloudErrHandle(errNo);
			if (cloudErrRel.result == false)
			{
				showStr = cloudErrRel.tip;
			}
			else
			{
				showStr = appendErrCode(errStr.invRequestFail, errNo);
			}
			break;
		}

		gCloudAccountBR["success"] = false;
		showAlert(showStr, objOrId);
		return false;
	}

	function gCloudAccountBRHd(callBack, timeoutCallBack, closeHandle)
	{
		showLoading(label.cloudAccoundBindWaiting, closeHandle, undefined, false);
		cloudAccountBind(gCloudAccountBR["account"], gCloudAccountBR["pwd"], function(code){
			closeLoading();
			if (true == gCloudAccountBindErrHandle(parseInt(code)))
			{
				typeof callBack == "function" && callBack();
			}
		}, function(){
			gCloudAccountBR["success"] = false;
			gCloudAccountBR["noteF"] = label.cloudAccountBindFail;
			gCloudAccountBR["noteS"] = label.cloudServerNoRespCheckNetwork;
			typeof timeoutCallBack == "function" && timeoutCallBack();
		});
	}

	function init()
	{
		var account = id("cloudAccount");
		var cloudPwd = id("cloudPwd");
		var returnBtn = id("return");

		id("productName").innerHTML = label.productName + proName;

		function lgChkPswVal(szValue)
		{
			return (/^[\x21-\x7e]+$/.test(szValue));
		}

		function checkAccount()
		{
			var accountVal = account.value;
			if (0 == accountVal.length)
			{
				showNoteB("cloudAccountNote", label.cloudAccountNull);
				return false;
			}

			if (true == checkNum(accountVal))
			{
				if (false == checkPhoneNum(accountVal))
				{
					showNoteB("cloudAccountNote", errStr.invCloudAccountFmtErr, "twoLine");
					return false;
				}
				else
				{
					closeNote("cloudAccountNote");
				}
			}
			else
			{
				if (false == checkEmail(accountVal))
				{
					showNoteB("cloudAccountNote", errStr.invCloudAccountFmtErr, "twoLine");
					return false;
				}
				else
				{
					closeNote("cloudAccountNote");
				}
			}

			gCloudAccountBR["account"] = accountVal;

			return true;

		}
		function checkPwd()
		{
			var pwd = cloudPwd.value;
			/* 检查密码 */
			if (pwd.length > 32 || pwd.length < 6)
			{
				showNoteB("cloudPwdNote", errStr.pwdLenErrTip, "twoLine");
				return false;
			}
			else
			{
				closeNote("cloudPwdNote");
			}

			if (!lgChkPswVal(pwd))
			{
				showNoteB("cloudPwdNote", errStr.pwdCharValid);
				return false;
			}
			else
			{
				closeNote("cloudPwdNote");
			}

			gCloudAccountBR["pwd"] = pwd;

			return true;

		}

		account.value = gCloudColObj.account;
		cloudPageSetNodes(true);
		id("fegtPwdLink").onclick = function(){
			/* 此处设置忘记密码的返回处理函数 */
			cloudSetBackHd(function(){
				gCloudColObj.account = account.value;
				showCloudPage("CloudBindCfg.htm");
			});
			showCloudPage("CloudForgPwd.htm");
		};
		id("cloudBindBtn").onclick = function(){
			if (true == $.local)
			{
				gCloudAccountBR["success"] = false;
				gCloudAccountBR["noteF"] = label.cloudAccountBindFail;
				gCloudAccountBR["noteS"] = label.cloudServerNoRespCheckNetwork;
				loadPage("CloudBindRegistResult.htm", "cloudMgtDetial", undefined, {bClearPageTickArray:false});
			}

			if (true == checkAccount() && true == checkPwd())
			{
				gCloudAccountBRHd(function(){
					loadPage("CloudBindRegistResult.htm", "cloudMgtDetial", undefined, {bClearPageTickArray:false});
				}, function(){
					loadPage("CloudBindRegistResult.htm", "cloudMgtDetial", undefined, {bClearPageTickArray:false});
				}, cloudAccountQueryStop);
			}
		};

		returnBtn.onclick = function(){
			cloudGoBackBR({binded:false});
		};

		if (true == gCloudAccountBR["bFWzd"])
		{
			returnBtn.value = "{%btn.skip%}>";
		}
		else
		{
			returnBtn.value = "{%btn.backWzd%}>";
		}

		account.onblur = checkAccount;
		cloudPwd.onblur = checkPwd;
		id("softVersionCloud").innerHTML += (gCloudAccountBR["softVersion"].split(" "))[0];
	}
	init();
</script>
<div class="cloudAccountLogo">
	<label class="proName" id="productName">{%label.productName%}</label>
</div>
<div class="cloudManageCon">
	<div id="cloudMgtDetial" class="cloudMgtDetial">
		<p class="title">
			<span class="title">{%label.cloudAccountUsed%}</span>
		</p>
		<input id="return" class="returnBtn" value="{%btn.backWzd%}>" type="button" />
		<ul class="gridLine gridLineD mpPhoneRgt40">
			<label class="desLblB" for="cloudAccount">{%label.tpLinkID%}</label>
			<li class="textConE textCon"><input id="cloudAccount" class="textC text imeModeN" maxLength="64" /></li>
			<li id="cloudAccountNote" class="note">
				<i class="tip"></i>
				<span class="note"></span>
			</li>
		</ul>
		<p class="inputTip">{%label.cloudBingNameTip%}</p>
		<ul class="gridLine gridLineD">
			<label class="desLblB" for="cloudPwd">{%label.password%}</label>
			<li class="textConE textCon"><input id="cloudPwd" class="textC text imeModeN" type="password" maxLength="32" /></li>
			<li id="cloudPwdNote" class="note">
				<i class="tip"></i>
				<span class="note"></span>
			</li>
		</ul>
		<p class="inputTip"><a id="fegtPwdLink" href="javascript:void(0);">{%label.loginPwdLost%}</a></p>
		<input id="cloudBindBtn" type="button" value="{%btn.ok%}" class="subBtn cloudSub" />
	</div>
	<div class="cloudMgtFoot">
		<ul class="footConCloud">
			<li id="softVersionCloud" class="softVersion">{%label.softVersion%}{%label.colon%}</li>
			<li class="netAddrTel"><a href="http://www.tp-link.com.cn" target="_blank">{%label.officalAddr%}</a><label>{%label.surpportTel%}400-8863-400</label></li>
		</ul>
	</div>
	<img src="../web-static/images/cloudF.png" class="cloudBRBgF" />
	<img src="../web-static/images/cloudS.png" class="cloudBRBgS" />
	<img src="../web-static/images/cloudS.png" class="cloudBRBgT" />
</div>