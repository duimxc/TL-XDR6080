<script type="text/javascript">
	var PWD_ERROR = 3;
	var SIGNAL_WEAK = 4;
	var WDS_FAIL = 5;
	var DHCP_FAIL = 6;
	var WDS_CONNECT_FAIL = 7;
	var WDS_TIMEOUT = 8;

	var getDhcpsHd = null;
	var getDhcpcHd = null;
	var getWdsStatusHd = null;

	var gLanIPStatus = false;
	var isLanIpChanged = false;
	var bInWizard = true;
	var backFromNextPage = false;
	var failRetry = false;
	var scanList = [];

	function errHandle(errNo)
	{
		switch(errNo)
		{
		case ENONE:
			return true;
		case EINVSSIDEMPTY:
			showPhWzdAlert(errStr.wlanSsidErr);
			break;
		case EINVSSIDLEN:
			showPhWzdAlert(errStr.wlanSsidLenErr);
			break;
		case EINVSSIDBLANK:
			showPhWzdAlert(errStr.wlanSsidBlank);
			break;
		case EINVPSKLEN:
			showPhWzdAlert(errStr.wlanPwdLenValid);
			break;
		case EINVIPFMT:
			showPhWzdAlert(errStr.ipAddrFmtNoteErr);
			break;
		case EINVNET:
			showPhWzdAlert(errStr.stcIpNetErr);
			break;
		case EINVIP:
			showPhWzdAlert(errStr.lanIpErr);
			break;
		case EINVNETID:
			showPhWzdAlert(errStr.stcNetIdErr);
			break;
		case EINVGROUPIP:
			showPhWzdAlert(errStr.ipAddrGroupErr);
			break;
		case EINVLOOPIP:
			showPhWzdAlert(errStr.ipAddrLoopErr);
			break;
		case EINVHOSTID:
			showPhWzdAlert(errStr.wdsIpAddrHostIdErr);
			break;
		case ECOMFLICTNET:
			showPhWzdAlert(errStr.lanIpWanConflict);
			break;
		case EINVWLANPWD:
			showPhWzdAlert(errStr.wlanPwdInvalid);
			break;
		case ESYSBUSY:
			showPhWzdAlert(errStr.invRequestFailTrylater);
			break;
		default:
			showPhWzdAlert(errStr.invRequestFail);
			break;
		}

		return false;
	}

	var MANUAL_WDS = false;
	var bWirelessLinked = false;

	var gOldLanIP = "";
	var gLanIP = "";
	var gLanIPMode = "";

	var FREQ_2G = 0;
	var FREQ_5G = 1;
	var FREQ_5G1 = 2;
	var FREQ_5G4 = 3;
	var FREQ_BS  = 4;

	var oldSelFreq = {};
	var wdsTargetSelFreq = {};
	var gWDSSuccessList = [];	/* 无线中继成功列表 */
	var gWDSPwdErrList = [];	/* 无线中继失败原因为密码错误列表 */
	var gWDSFailStatus;			/* 桥接全部失败状态码 */
	var gWDSFailStr;			/* 桥接全部失败结果提示 */
	var gWDSPartlyFailStr;		/* 交接部分失败结果展示 */

	/* 当前设备连接的是2G还是5G无线，仅当bWirelessLinked == ture有效 */
	var curEqtFreq = FREQ_2G;

	/*频段信息*/
	var gFreqInfo = ["2.4G","5G","5G1","5G2"];

	/* 本路由器无线配置 */
	var gLocalAPInfo = [];
	gLocalAPInfo[FREQ_2G] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gLocalAPInfo[FREQ_5G ] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gLocalAPInfo[FREQ_5G1] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gLocalAPInfo[FREQ_5G4] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gLocalAPInfo[FREQ_BS ] = {"ssid":"", "encryption":"", "key":"", "wifi_enable":"", "bs_enable":""};

	/* 桥接的Root AP参数 */
	var gRootAPInfo = [];
	gRootAPInfo[FREQ_2G] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gRootAPInfo[FREQ_5G] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gRootAPInfo[FREQ_5G1] = {"ssid":"", "encryption":"", "key":"", "enable":""};
	gRootAPInfo[FREQ_5G4] = {"ssid":"", "encryption":"", "key":"", "enable":""};

	var connectingCount = 1;
	var dhcpcRetryCounts = 1;
	var dhcpsRetryCounts = 1;

	var gWDSModel = [];
	gWDSModel[FREQ_2G] = {
		start_dhcps_detect: "start_dhcps_detect_2g",
		wds_start:			"wds_start_2g",
		wlan_wds_dhcps:		"wlan_wds_2g_dhcps",
		wlan_wds_dhcpc:		"wlan_wds_2g_dhcpc",
		wlan_wds_status:	"wlan_wds_2g_status",
		set_wds:			"wlan_wds_2g",
		scan_start:			{"wireless":{"scan_start_2g":null}},
		wlan_scan_status:	"wlan_scan_2g_status",
		wlan_scan:			"wlan_scan_2g"
	};

	gWDSModel[FREQ_5G] = {
		start_dhcps_detect: "start_dhcps_detect_5g",
		wds_start:			"wds_start_5g",
		wlan_wds_dhcps:		"wlan_wds_5g_dhcps",
		wlan_wds_dhcpc:		"wlan_wds_5g_dhcpc",
		wlan_wds_status:	"wlan_wds_5g_status",
		set_wds:			"wlan_wds_5g",
		scan_start:			{"wireless":{"scan_start_5g":null}},
		wlan_scan_status:	"wlan_scan_5g_status",
		wlan_scan:			"wlan_scan_5g"
	};

	/* 5G1和5G4的数据模型中存在2g的，具体定义待定，后续三频改正 */
	gWDSModel[FREQ_5G1] = {
		start_dhcps_detect: "start_dhcps_detect_5g_1",
		wds_start:			"wds_start_5g_1",
		wlan_wds_dhcps:		"wlan_wds_5g_1_dhcps",
		wlan_wds_dhcpc:		"wlan_wds_5g_1_dhcpc",
		wlan_wds_status:	"wlan_wds_5g_1_status",
		set_wds:			"wlan_wds_5g_1",
		scan_start:			{"wireless":{"scan_start_5g_1":null}},
		wlan_scan_status:	"wlan_scan_5g1_status",
		wlan_scan:			"wlan_scan_5g_1"
	};

	gWDSModel[FREQ_5G4] = {
		start_dhcps_detect: "start_dhcps_detect_5g_4",
		wds_start:			"wds_start_5g_4",
		wlan_wds_dhcps:		"wlan_wds_5g_4_dhcps",
		wlan_wds_dhcpc:		"wlan_wds_5g_4_dhcpc",
		wlan_wds_status:	"wlan_wds_5g_4_status",
		set_wds:			"wlan_wds_5g_4",
		scan_start:			{"wireless":{"scan_start_5g_4":null}},
		wlan_scan_status:	"wlan_scan_5g4_status",
		wlan_scan:			"wlan_scan_5g_4"
	};

	function checkWifiSwitchOff(callback) {
		var wifiSwitchFileName = "custom_wireless";
		var wifiSwitchReq = {};
		// 自XTR11060后，渠道版机型无线总开关机型从wireless中拿wifi_switch数据。
		if (typeof gWifiSwitchUseWireless != "undefined" && gWifiSwitchUseWireless) {
			wifiSwitchFileName = "wireless";
		}
		wifiSwitchReq[wifiSwitchFileName] = {};
		wifiSwitchReq[wifiSwitchFileName]["name"] = "wifi_switch";
		$.query(wifiSwitchReq, function (rsp) {
			if (rsp["error_code"] !== ENONE) {
				errHandle(rsp["error_code"])
			} else {
				if (rsp[wifiSwitchFileName]["wifi_switch"]["enable"] == "off") {
					showPhWzdAlert("无线总开关已关闭，请先开启无线总开关后再重新设置。",function() {
						loadPage("PhoneNetwork.htm", "phCon");
					});
				} else {
					callback();
				}
			}
		})
	}
	function dhcpFailConfirm() {
		gWDSFailStatus = DHCP_FAIL;
		dhcpcRetryCounts = 1;
		dhcpsRetryCounts = 1;
		connectingCount = 1;
		loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
	}

	function dhcpFailHandle()
	{
		closeLoading();
		if (gWifiSwitchSupport || gCustomWifiSwitchSupport){
			checkWifiSwitchOff(dhcpFailConfirm)
		} else {
			dhcpFailConfirm();
		}
	}

	function lanIpModeHandle(callback)
	{
		if ("manual" == gLanIPMode) {
			showPhConfirm("当前路由器的LAN口IP为手动设置，使用无线桥接将更改为自动，确定更改LAN口IP设置？", function(choose) {
				if (true == choose) {
					gLanIPMode = "dynamic";
					$.modify({"network":{"lan":{"ip_mode":"dynamic"}}}, null, true);
					callback();
				}
			});
		}
		else {
			callback();
		}
	}

	function wdsCanceldHandle()
	{
        var data = {"wireless":{}};
        var wdsStartArg = {"wireless":{}}
        for (var freq in wdsTargetSelFreq) {
            if (wdsTargetSelFreq[freq].selected) {
                data.wireless[gWDSModel[freq].set_wds] = {"enable":"0"};
                wdsStartArg.wireless[gWDSModel[freq].wds_start] = {"set_ip_immediate":"1"};
				gRootAPInfo[freq].enable = "0";
            }
        }

		clearTimeout(getWdsStatusHd);
		clearTimeout(getDhcpsHd);
		clearTimeout(getDhcpcHd);

		$.modify(data, function() {
			$.action(wdsStartArg, function(ret) {closeLoading();});
		});
	}

    function wdsSetLanIp()
	{
        var data = {"network": {"lan": {"ipaddr": gLanIP, "netmask": gLanMask, "ip_mode": "dynamic"}}, "system":{"sys_mode":{"mode":uciSystem.optValue.sysMode.wdsMode}}};
        $.modify(data, function (ret) {
            $.action({"network": {"apply_lan_config": null}});
            closeLoading();
			showLoading("连接成功，路由器IP地址已更改为：" + gLanIP + "。页面将自动跳转到新的IP地址，请稍候...", undefined, adjustPhLoading(), false);
			$.changeDomain(gLanIP);

            $.setTimeout(function () {
                window.location.href = "http://" + gLanIP;
            }, 120000);

            $.setTimeout(function () {
                lanDetecting(function () {
                    window.location.href = "http://" + gLanIP;
                });
            }, 4000);
        });
    }

	function wdsGetIpDhcpsStatus()
	{
		var DETECT_UNFINISHED = 0, DETECT_FINISHED = 1;
        var ROOT_DHCPS_OFF = 0, ROOT_DHCPS_ON = 1;

		var dhcpsData = {"wireless":{"name":[]}};
        for (var freq in wdsTargetSelFreq) {
            if (wdsTargetSelFreq[freq].selected) {
                dhcpsData.wireless.name.push(gWDSModel[freq].wlan_wds_dhcps);
            }
        }

		if (dhcpsRetryCounts > 15) {
            dhcpFailHandle();
            return;
        }

		$.query(dhcpsData, function(ret) {
            if (ENONE == ret[ERR_CODE]) {
                var detectFinished = true;

                for (var freq in wdsTargetSelFreq) {
                    if (wdsTargetSelFreq[freq].selected) {
                        var curFreqStatus = parseInt(ret.wireless[gWDSModel[freq].wlan_wds_dhcps].status);
                        var curFreqResult = parseInt(ret.wireless[gWDSModel[freq].wlan_wds_dhcps].result);

                        //只要有任一频段探测成功，就认为前端开启dhcps
                        //探测完成 且 ROOT AP开启了DHCPS功能，进行下一步
                        if (DETECT_FINISHED == curFreqStatus && ROOT_DHCPS_ON == curFreqResult) {
                            dhcpcRetryCounts = 1;
                            getDhcpcHd = $.setTimeout(wdsDhcpcGetStatus, 100);
                            return;
                        }

                        //只要有一个频段探测未完成，detectFinished就为false
                        if (DETECT_UNFINISHED == curFreqStatus) {
                            detectFinished = false;
                        }
                    }
                }

                if (!detectFinished) {
                    dhcpsRetryCounts++;
                    getDhcpsHd = $.setTimeout(wdsGetIpDhcpsStatus, 1000);
                }
                //各频段的DHCPS探测都完成了，且没有进入下一步
                else {
                    dhcpFailHandle();
                }
            }
            else {
                dhcpFailHandle();
            }
        });
	}

	function wdsDhcpcGetStatus()
	{
		if (dhcpcRetryCounts > 15)
		{
			dhcpFailHandle();
			return;
		}

		var arg = {"wireless":{"name":[]}};
        for (var freq in wdsTargetSelFreq) {
            if (wdsTargetSelFreq[freq].selected) {
                arg.wireless.name.push(gWDSModel[freq].wlan_wds_dhcpc);
            }
        }

		$.query(arg, function(result) {
			var dhcpFail = true;

			for (var freq in wdsTargetSelFreq) {
				if (wdsTargetSelFreq[freq].selected) {
					var curFreqData = result.wireless[gWDSModel[freq].wlan_wds_dhcpc];
					if (uciWireless.dynOptValue.dhcpcStatus.dhcpcSuccess == curFreqData.status) {
						closeLoading();
						gLanIP = curFreqData.ip;
						gLanMask = curFreqData.mask;
						loadPage("PhoneWlanWDSCfgThird.htm", "phCon");
						return;
					} else if (uciWireless.dynOptValue.dhcpcStatus.dhcpcRequsting == curFreqData.status) {
						dhcpFail = false;
					}
				}
			}

			if (dhcpFail) {
				dhcpFailHandle();
			} else {
				dhcpcRetryCounts++;
				getDhcpcHd = $.setTimeout(wdsDhcpcGetStatus, 1000);
			}
		});
	}

	function wdsFailComfirm() {
		gWDSFailStatus = WDS_FAIL;
		clearTimeout(getWdsStatusHd);
		connectingCount = 1;
		loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
	}

	function wdsTimeoutHandle()
		{
			closeLoading();
			function connectFailComfirm() {
				gWDSFailStatus = WDS_TIMEOUT;
				clearTimeout(getWdsStatusHd);
				connectingCount = 1;
				loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
			}

			if (gWifiSwitchSupport || gCustomWifiSwitchSupport){
				checkWifiSwitchOff(connectFailComfirm);
			} else {
				connectFailComfirm();
			}
		}

	function wdsStatusHd()
	{
		if (connectingCount > 20) {	//桥接超时
			if ("undefined" != typeof wdsTimeoutHandle) {
				wdsTimeoutHandle();
			}
			else {
				closeLoading();
				// 若支持无线总开关，在桥接过程中关闭无线总开关时桥接会失败，提示无线总开关已关闭，跳转至wds首页
				if (gWifiSwitchSupport || gCustomWifiSwitchSupport){
					checkWifiSwitchOff(wdsFailComfirm);
				} else {
					wdsFailComfirm();
				}
			}
			return;
		}

        var data = {"wireless":{"name":[]}};
        for (var freq in wdsTargetSelFreq) {
            if (wdsTargetSelFreq[freq].selected) {
                data.wireless.name.push(gWDSModel[freq].wlan_wds_status);
            }
		}

		$.query(data, function(ret) {
            var connectingNum = 0;          //正在连接
            var connectedNum = 0;           //已连接
            var passwordErrNum = 0;         //密码错误
            var signalWeakNum = 0;          //信号弱
            var failedNum = 0;              //中继失败
            var allFreq = 0;

			var successSsid = "", pwdErrSsid = "", signalWeakSsid = "", failedSsid = "";
			gWDSPwdErrList = [];
			gWDSSuccessList = [];

            for (var freq in wdsTargetSelFreq) {
                if (wdsTargetSelFreq[freq].selected) {
                    var status = parseInt(ret.wireless[gWDSModel[freq].wlan_wds_status].status);
					wdsTargetSelFreq[freq].status = status;
                    switch(status)
                    {
                    case 2:		//已连接
                        connectedNum++;
						successSsid += (successSsid == "" ? "" : ",") + gFreqInfo[freq] + "频段" + gRootAPInfo[freq].ssid;
						gWDSSuccessList.push(gRootAPInfo[freq]);
                        break;
                    case 3:     //密码错误
                        passwordErrNum++;
                        gRootAPInfo[freq].pwdErr = true;
						pwdErrSsid += (pwdErrSsid == "" ? "" : ",") + gFreqInfo[freq] + "频段" + gRootAPInfo[freq].ssid;
						gWDSPwdErrList.push(freq);
                        break;
                    case 4:     //信号弱
                        signalWeakNum++;
                        signalWeakSsid += (signalWeakSsid == "" ? "" : ",") + gFreqInfo[freq] + "频段" + gRootAPInfo[freq].ssid;
                        break;
                    case 5:     //中继失败
                        failedNum++;
                        failedSsid += (failedSsid == "" ? "" : ",") + gFreqInfo[freq] + "频段" + gRootAPInfo[freq].ssid;
                        break;
                    case 0:
                    case 1:
                        connectingNum++;
                        break;
                    default:
                    }
                    allFreq++;
                }
            }

			gWDSFailStatus = 0;

			if (connectedNum == allFreq) {  //都桥接成功
                dhcpsRetryCounts = 1;
				getDhcpsHd = $.setTimeout(wdsGetIpDhcpsStatus, 100);
            } else if (connectingNum != 0) {
                connectingCount++;
                getWdsStatusHd = $.setTimeout(wdsStatusHd, 2000);
			} else if (failedNum == allFreq) { //都桥接失败
				closeLoading();
				gWDSFailStatus = 5;
				gWDSFailStr = "中继失败，请尝试重新配置";
				loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
			} else if (signalWeakNum == allFreq) { //都信号弱
                closeLoading();
				gWDSFailStatus = 4;
				gWDSFailStr = "前端路由信号弱，请尝试重新配置";
				loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
			} else if (passwordErrNum == allFreq) { //都密码错误
				closeLoading();
				gWDSFailStatus = 3;
				loadPage("PhoneWlanWDSCfgSecond.htm", "phCon");
            } else if (failedNum + signalWeakNum + passwordErrNum == allFreq) { // 全部失败但是原因不一致
				closeLoading();
				if (passwordErrNum > 0) { // 存在密码错误
					gWDSFailStatus = 3;
					loadPage("PhoneWlanWDSCfgSecond.htm", "phCon");
				} else {
					gWDSFailStatus = 5;
					gWDSFailStr = signalWeakSsid + "信号弱；" +
								  failedSsid + "中继失败；" +
								  "请尝试重新配置";
					loadPage("PhoneWlanWDSCfgFail.htm", "phCon");
				}
			} else if (connectedNum > 0) {  //部分中继成功
                if (passwordErrNum > 0) {   //部分中继成功，部分密码错误
					closeLoading();
					gWDSPartlyFailStr = successSsid + "中继成功，" + pwdErrSsid + "密码错误；您可重新输入密码或只中继成功的网络";
					loadPage("PhoneWlanWDSCfgPartlyFail.htm", "phCon");
                } else {
                    var confirmText = successSsid + "中继成功，";
                    if (signalWeakNum > 0) {
                        confirmText += signalWeakSsid + "信号弱；";
                    }
                    if (failedNum > 0) {
                        confirmText += failedSsid + "中继失败；";
                    }
                    confirmText += "您可尝试重连或只中继成功的网络";
					closeLoading();
					gWDSPartlyFailStr = confirmText;
					loadPage("PhoneWlanWDSCfgPartlyFail.htm", "phCon");
                }
            }
		});
	}

	function adjustPhLoading() {
		var classObj = {
			"loadConClass": "phLoadConClass",
			"loadClass": "phLoadClass",
			"coverLoadingClass": "phCoverLoadingClass"
		};

		return classObj;
	}

	function chkWifiOpened() {
		/* bandsteering功能打开 */
		if (gSupportBS && "1" == gLocalAPInfo[FREQ_BS].bs_enable)
		{
			if ("1" == gLocalAPInfo[FREQ_BS].wifi_enable)
			{
				loadPage("PhoneWlanWDSCfgFirst.htm", "phCon");
				return;
			}
			else
			{
				showPhConfirm(label.alertWifiOpen, function(choose) {
					if (true == choose) {
						openWifi(true);
					}
				});
			}
		}
		else
		{
			for (var freq in gLocalAPInfo)
			{
				if ("1" == gLocalAPInfo[freq].enable)
				{
					loadPage("PhoneWlanWDSCfgFirst.htm", "phCon");
					return;
				}
			}

			showPhConfirm(label.alertWifiOpen, function(choose) {
				if (true == choose) {
					openWifi(false);
				}
			});
		}
	}

	function closeFailedBand() {
		var data = {"wireless":{}};
		for (var freq in wdsTargetSelFreq) {
			if (wdsTargetSelFreq[freq].selected && wdsTargetSelFreq[freq].status != 2) {
				var secCfg = {};
				secCfg.enable = "0";
				secCfg.ssid = "";
				data.wireless[gWDSModel[freq].set_wds] = secCfg;
				gRootAPInfo[freq].enable = "0";
				wdsTargetSelFreq[freq].selected = false;
			}
		}
		$.modify(data, function(ret) {
			dhcpsRetryCounts = 1;
			getDhcpsHd = $.setTimeout(wdsGetIpDhcpsStatus, 100);
		});
	}

	/* 定义单/双/三频机型的配置名称 */
	var gKeyNames = [];
	gKeyNames[BAND_1] = {};
	gKeyNames[BAND_2] = {};
	gKeyNames[BAND_3] = {};
	gKeyNames[BAND_1].wlan_host = [];
	gKeyNames[BAND_2].wlan_host = [];
	gKeyNames[BAND_3].wlan_host = [];
	gKeyNames[BAND_1].wlan_wds  = [];
	gKeyNames[BAND_2].wlan_wds  = [];
	gKeyNames[BAND_3].wlan_wds  = [];
	gKeyNames[BAND_1].wds_cfg_status = [];
	gKeyNames[BAND_2].wds_cfg_status = [];
	gKeyNames[BAND_3].wds_cfg_status = [];

	gKeyNames[BAND_1].wlan_host[FREQ_2G]       = "wlan_host_2g";
	gKeyNames[BAND_1].wlan_wds[FREQ_2G]        = "wlan_wds_2g";
	gKeyNames[BAND_1].wds_cfg_status[FREQ_2G]  = "wds_cfg_status_2g";
	gKeyNames[BAND_2].wlan_host[FREQ_2G]       = "wlan_host_2g";
	gKeyNames[BAND_2].wlan_host[FREQ_5G]       = "wlan_host_5g";
	gKeyNames[BAND_2].wlan_wds[FREQ_2G]        = "wlan_wds_2g";
	gKeyNames[BAND_2].wlan_wds[FREQ_5G]        = "wlan_wds_5g";
	gKeyNames[BAND_2].wds_cfg_status[FREQ_2G]  = "wds_cfg_status_2g";
	gKeyNames[BAND_2].wds_cfg_status[FREQ_5G]  = "wds_cfg_status_5g";
	gKeyNames[BAND_3].wlan_host[FREQ_2G ]      = "wlan_host_2g";
	gKeyNames[BAND_3].wlan_host[FREQ_5G1]      = "wlan_host_5g_1";
	gKeyNames[BAND_3].wlan_host[FREQ_5G4]      = "wlan_host_5g_4";
	gKeyNames[BAND_3].wlan_wds[FREQ_2G ]       = "wlan_wds_2g";
	gKeyNames[BAND_3].wlan_wds[FREQ_5G1]       = "wlan_wds_5g_1";
	gKeyNames[BAND_3].wlan_wds[FREQ_5G4]       = "wlan_wds_5g_4";
	gKeyNames[BAND_3].wds_cfg_status[FREQ_2G ] = "wds_cfg_status_2g";
	gKeyNames[BAND_3].wds_cfg_status[FREQ_5G1] = "wds_cfg_status_5g_1";
	gKeyNames[BAND_3].wds_cfg_status[FREQ_5G4] = "wds_cfg_status_5g_4";

	function init()
	{
		function initWds() {
			/* 根据产品支持的频段数初始化请求参数 */
			var args = {"wireless":{"name":[]}, "network":{"name":["lan"]}, "hosts_info":{"table":["host_info"]}};
			for (var keyname in gKeyNames[gBandNum])
			{
				$.each(gKeyNames[gBandNum][keyname], function(k, v){
					if (null != v)
					{
						args.wireless.name.push(v);
					}
				})
			}

			/* 支持BandSteering */
			if (typeof(gSupportBS) != "undefined" && gSupportBS)
			{
				args.wireless.name.push("wlan_bs");
			}

			$.query(args, function(data) {
				$.each(gKeyNames[gBandNum].wlan_host, function(freq, keyname){
					if (null != keyname)
					{
						gLocalAPInfo[freq].enable = data.wireless[keyname].enable;
						gLocalAPInfo[freq].ssid = data.wireless[keyname].ssid;
						gLocalAPInfo[freq].encryption = data.wireless[keyname].encryption;
						gLocalAPInfo[freq].key = data.wireless[keyname].key;
					}
				});

				$.each(gKeyNames[gBandNum].wlan_wds, function(freq, keyname){
					if (null != keyname)
					{
						gRootAPInfo[freq].enable = data.wireless[keyname].enable;
						gRootAPInfo[freq].ssid = data.wireless[keyname].ssid || "";
						gRootAPInfo[freq].encryption = parseInt(data.wireless[keyname].encryption) ? 1 : 0;
						gRootAPInfo[freq].key = data.wireless[keyname].key;
					}
				});

				if (gSupportBS)
				{
					gLocalAPInfo[FREQ_BS].wifi_enable = data.wireless.wlan_bs.wifi_enable;
					gLocalAPInfo[FREQ_BS].bs_enable = data.wireless.wlan_bs.bs_enable;
					gLocalAPInfo[FREQ_BS].ssid = data.wireless.wlan_bs.ssid;
					gLocalAPInfo[FREQ_BS].encryption = data.wireless.wlan_bs.encryption;
					gLocalAPInfo[FREQ_BS].key = data.wireless.wlan_bs.key;
				}

				/* LAN口信息 */
				gOldLanIP = gLanIP = data.network.lan.ipaddr;
				gLanIPMode = data.network.lan.ip_mode;

				/* 当前主机是通过有线还是无线连接管理页面 */
				var LINK_TYPE_WIRED = uciHostsInfo.optValue.linkType.wired;
				var hostInfo = formatTableData(data.hosts_info.host_info);
				var len = hostInfo.length;

				for (var idx = 0; idx < len; idx++) {
					if ("1" == hostInfo[idx]["is_cur_host"]) {
						switch (hostInfo[idx]["wifi_mode"])
						{
						case "0":
						curEqtFreq = FREQ_2G;
						break;
						case "1":
							curEqtFreq = FREQ_5G;
							break;
						case "2":
							curEqtFreq = FREQ_5G1;
							break;
						case "3":
							curEqtFreq = FREQ_5G4;
							break;
						default:
							break;
				}

						if (gSupportBS && "1" == gLocalAPInfo[FREQ_BS].bs_enable)
						{
							curEqtFreq = FREQ_BS;
						}
						bWirelessLinked = (LINK_TYPE_WIRED != hostInfo[idx]["type"]) ? true : false;
						break;
					}
				}

				// var IDLE = 0;
				// var FAIL = 1;
				// var SUCCESS = 2;
				// var CONNECTING = 3;
				// var UNFINISHED = 4;
				// var wdsCfgStatus = IDLE;

				// for (var freq in gRootAPInfo)
				// {
				// 	var rootApSsidLen = gRootAPInfo[freq].ssid.length;
				// 	var keyname = gKeyNames[gBandNum].wds_cfg_status[freq];

				// 	if (rootApSsidLen > 0)
				// 	{
				// 		wdsTargetSelFreq[freq] = {"selected": true, "bs": false};
				// 		switch (data.wireless[keyname].status) {
				// 		case "idle":
				// 			if (wdsCfgStatus <= IDLE) {
				// 				wdsCfgStatus = IDLE;
				// 			}
				// 			break;
				// 		case "unfinished":
				// 			if (wdsCfgStatus <= UNFINISHED) {
				// 				wdsCfgStatus = UNFINISHED;
				// 			}
				// 			wdsTargetSelFreq[freq].status = 2;
				// 			break;
				// 		case "connecting":
				// 			if (wdsCfgStatus <= CONNECTING) {
				// 				wdsCfgStatus = CONNECTING;
				// 			}
				// 			break;
				// 		case "connect_fail":
				// 			if (wdsCfgStatus <= FAIL) {
				// 				wdsCfgStatus = FAIL;
				// 			}
				// 			break;
				// 		case "success":
				// 			if (wdsCfgStatus <= SUCCESS) {
				// 				wdsCfgStatus = SUCCESS;
				// 			}
				// 			break;
				// 		}
				// 	}
				// }

				// switch(wdsCfgStatus)
				// {
				// 	case IDLE:			//未配置wds
				// 	loadPage("PhoneWlanWDSCfgFirst.htm", "phCon");
				// 	break;
				// case UNFINISHED:		//wds桥接成功，但向导流程未走完
				// 	showLoading(label.WDSConnecting, function() {
				// 		wdsCanceldHandle();
				// 		loadPage("PhoneWlanWDSCfgEnd.htm", "phCon");
				// 	}, adjustPhLoading());
				// 	getDhcpsHd = $.setTimeout(wdsGetIpDhcpsStatus, 100);
				// 	break;
				// case CONNECTING:		//正在桥接
				// 	showLoading(label.WDSConnecting, function() {
				// 		wdsCanceldHandle();
				// 		loadPage("PhoneWlanWDSCfgThird.htm", "phCon");
				// 	}, adjustPhLoading());
				// 	connectingCount = 1;
				// 	getWdsStatusHd = $.setTimeout(wdsStatusHd, 100);
				// 	break;
				// case FAIL:	//桥接失败
				// 	// 如果WDS已经关闭，则直接显示WDS状态页面
				// 	var allWdsDisabled = true;
				// 	for (var freq in wdsTargetSelFreq) {
				// 		if (wdsTargetSelFreq[freq].selected && parseInt(gRootAPInfo[freq].enable) == 1) {
				// 			allWdsDisabled = false;
				// 			break;
				// 		}
				// 	}
				// 	if (allWdsDisabled) {
				// 		// TODO 桥接失败且所有频段不可用跳转页面
				// 		console.log('aaa');
				// 		loadPage("PhoneNetwork.htm", "phCon");
				// 		return;
				// 	}
				// 	function wdsConnectFailConfirm() {
				// 		showPhConfirm("连接失败，请确定是否重试？", function(result) {
				// 			if (true == result) {
				// 				showLoading(label.WDSConnecting, function() {
				// 					wdsCanceldHandle();
				// 					loadPage("PhoneWDS.htm", "phCon");
				// 				}, adjustPhLoading());
				// 				connectingCount = 1;
				// 				getWdsStatusHd = $.setTimeout(wdsStatusHd, 100);
				// 			}
				// 			else {
				// 				wdsCanceldHandle();
				// 				loadPage("PhoneNetwork.htm", "phCon");
				// 			}
				// 		});
				// 	}
				// 	if (gWifiSwitchSupport || gCustomWifiSwitchSupport){
				// 		checkWifiSwitchOff(wdsConnectFailConfirm)
				// 	} else {
				// 		wdsConnectFailConfirm();
				// 	}
				// 	break;
				// case "success":		//桥接成功，向导流程走完
				// default:
				// 	loadPage("PhoneWlanWDSCfgEnd.htm", "phCon");
				// 	break;
				// }
				lanIpModeHandle(chkWifiOpened);
			});
		}

		function openWifi(bsEnable)
		{
			var cfg = {"wireless": {}};
			if (bsEnable)
			{
				cfg.wireless.wlan_bs = {"wifi_enable": "1"};
			}
			else
			{
				$.each(gKeyNames[gBandNum].wlan_host, function(k, v){
					if (null != v)
					{
						cfg.wireless[v] = {"enable":"1"};
					}
				});
			}

			showLoading(statusStr.cfgApplying, undefined, adjustPhLoading());
			$.modify(cfg, function(ret) {
				var errNo = ret[ERR_CODE];
				if (ENONE !== errNo) {
					closeLoading();
					errHandle(errNo);
				}
				else {
					$.setTimeout(function() {
						//等待无线开启再跳到扫描页面
						closeLoading();
						if (bsEnable)
						{
							gLocalAPInfo[FREQ_BS].wifi_enable = "1";
						}
						else
						{
							for (var freq in gKeyNames[gBandNum].wlan_host)
							{
								if (null != gKeyNames[gBandNum].wlan_host[freq])
								{
									gLocalAPInfo[freq].enable = "1";
								}
							}
						}

						if (ret["dfs_wait_time"] && ret["dfs_wait_time"] != 0)
						{
							showDFSPopUpWindow(function () {
								loadPage("PhoneWlanWDSCfgFirst.htm", "phCon");
							}, parseInt(ret["dfs_wait_time"]));
						}
						else
						{
							loadPage("PhoneWlanWDSCfgFirst.htm", "phCon");
						}
					}, 3000);
				}
			});
		}

		/* 桥模式下禁用WDS */
		function checkBridgeStatus()
		{
			var data = {};
			data[uciCustomNetwork.fileName] = {};
			data[uciCustomNetwork.fileName][KEY_NAME] = [uciCustomNetwork.dynData.bridgestatus];

			$.query(data, function(result){
				if (result[ERR_CODE] == ENONE)
				{
					var mode = result[uciCustomNetwork.fileName][uciCustomNetwork.dynData.bridgestatus][uciCustomNetwork.optName.enable];
					if (mode == uciCustomNetwork.optValue.mode.bridge)
					{
						$("#bridgeTip").show();
					}
					else
					{
						initWds();
					}
				}
				else
				{
					errHandle(result[ERR_CODE]);
				}
			});
		}

		/* 无线总开关关闭时禁用WDS */
		function checkWifiSwitch() {
			var fileName;
			var params = {};

			if (gWifiSwitchSupport && gCustomWifiSwitchSupport) {
				fileName = uciWireless.fileName;
			} else {
				fileName = uciCustomWireless.fileName;
			}

			params[fileName] = {};
			params[fileName]["name"] = "wifi_switch";

			$.query(params, function(data){
				if (data[ERR_CODE] !== ENONE) {
					errHandle(result[ERR_CODE]);
				} else {
					if(data[fileName].wifi_switch.enable == "off" ||
					(data[fileName].wifi_switch.enable_2g == "off" && data[fileName].wifi_switch.enable_5g == "off")) {
						id("wifiTip").style.display = "block";
					}
					else
					{
						if (gModeSwitchSupport)
						{
							checkBridgeStatus();
						}
						else
						{
							initWds();
						}
					}
				}
			});
		}

		if (gWifiSwitchSupport || gCustomWifiSwitchSupport)
		{
			checkWifiSwitch();
		}
		else if (gModeSwitchSupport)
		{
			checkBridgeStatus();
		}
		else
		{
			initWds();
		}
	}

	init();
</script>
<style type="text/css">
	#WDSCon{
		margin-top:25px !important;
	}
	div.WDSBlockFuncA{
		font-size:0px;
		margin:18px 0;
		text-align:right;
		overflow:hidden;
	}
	div.WDSBlockFuncB{
		width:413px;
	}
	#WDSWwitchCon{
		visibility:hidden;
	}
	#hsSwitchState{
		visibility:hidden;
	}
	p.WDSTitle{
		color:#FFFFFF;
		font-size:12px;
		font-weight:bold;
		text-align:left !important;
	}
	span.WDSLinkRetrySp{
		height:17px;
		line-height:21px;
		cursor:pointer;
		display:inline-block;
		border-bottom:1px solid #FFFFFF;
	}
	p.wifiSwitchOffTip{
		color:#fff;
		margin:32px 24px;
		text-align:left;
	}
</style>
<h1 class="phoneTitle">{%label.phWDSTitle%}</h1>